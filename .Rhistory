library(tidyverse)
commands <- str_split(readLines("day10_input.txt")," ")
setwd("~/GitHub/Advent_of_Code_2022")
library(tidyverse)
commands <- str_split(readLines("day10_input.txt")," ")
head(commands)
commands <- str_split(readLines("day10_test_input.txt")," ")
X <- NULL
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { if (is.null(X)) { X <- 0 } else { X <- c(X, tail(X,1)) } }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
X
X <- 0
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { if ( length(X) > 1 ) { X <- c(X, tail(X,1)) } }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
X
X <- 0
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
X
X <- c(0,0)
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
X
head(commands)
X[20]*20
X <- c(1,1)
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
X[20]*20
X[60]*60
commands <- str_split(readLines("day10_input.txt")," ")
X <- c(1,1)
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
# Part 1: sum of signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles
sum(X[20]*20,X[60]*60,X[100]*100,X[140]*140,X[180]*180,X[220]*220)
commands <- str_split(readLines("day10_test_input.txt")," ")
X <- c(1,1)
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
# Part 1: sum of signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles
sum(X[20]*20,X[60]*60,X[100]*100,X[140]*140,X[180]*180,X[220]*220)
X[20]*20
X[40]*40
X[60]*60
X[100]*100
X
X <- c(1,)
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
# Part 1: sum of signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles
sum(X[20]*20,X[60]*60,X[100]*100,X[140]*140,X[180]*180,X[220]*220)
X <- 1
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
# Part 1: sum of signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles
sum(X[20]*20,X[60]*60,X[100]*100,X[140]*140,X[180]*180,X[220]*220)
commands <- str_split(readLines("day10_input.txt")," ")
X <- 1
for (row in commands) {
if ( unlist(row)[1] == 'noop' ) { X <- c(X, tail(X,1)) }
if ( unlist(row)[1] == 'addx' ) { X <- c(X, tail(X,1), (tail(X,1)+as.integer(unlist(row)[2]))) }
}
# Part 1: sum of signal strength during the 20th, 60th, 100th, 140th, 180th, and 220th cycles
sum(X[20]*20,X[60]*60,X[100]*100,X[140]*140,X[180]*180,X[220]*220)
Y = null
Y = NULL
Y
Y = c(Y,1)
Y
for (crt in 0:239) {
if (abs(X[crt+1]-crt)<=1) { Y <- c(Y,'#')} else { Y <- c(Y, '.')}
}
Y <- NULL
for (crt in 0:239) {
if (abs(X[crt+1]-crt)<=1) { Y <- c(Y,'#')} else { Y <- c(Y, '.')}
}
display <- rbind(substring(Y,1,40),substring(Y,41,80),substring(Y,81,120),substring(Y,121,160),substring(Y,161,200),subtring(Y,201,240))
display <- rbind(substring(Y,1,40),substring(Y,41,80),substring(Y,81,120),substring(Y,121,160),substring(Y,161,200),substring(Y,201,240))
display
View(display)
display <- data.frame(rbind(substring(Y,1,40),substring(Y,41,80),substring(Y,81,120),substring(Y,121,160),substring(Y,161,200),substring(Y,201,240)))
View(display)
display <- as.data.frame(rbind(substring(Y,1,40),substring(Y,41,80),substring(Y,81,120),substring(Y,121,160),substring(Y,161,200),substring(Y,201,240)))
View(display)
substring(Y,1,40)
Y
Y[1:40]
Y[41:80]
X

library(tidyverse)
### Part 1
# read data
df <- read.csv("day1_input.txt", sep='\n', header = FALSE)
setwd("~/GitHub/Advent_of_Code_2022")
library(tidyverse)
### Part 1
# read data
df <- read.csv("day1_input.txt", sep='\n', header = FALSE)
library(tidyverse)
### Part 1
# read data
df <- read.csv("day1_input.txt", sep='\n', header = FALSE)
View(df)
df <- read.csv("day1_input.txt", header = FALSE)
View(df)
con = file("day1_input.txt", "r")
while ( TRUE ) {
line = readLines(con, n = 1)
print(line)
}
close(con)
con = file("day1_input.txt", "r")
for (i in 1:20) {
line = readLines(con, n = 1)
print(line)
}
close(con)
my_txt <- readLines("day1_input.txt", sep = "\n", n=5))
my_txt <- readLines("day1_input.txt", sep = "\n", n=5)
my_txt <- readLines("day1_input.txt", n=5)
my_txt
class(my_txt)
df <- read.csv("day1_input.txt", header = FALSE, na.strings='')
df <- read.csv("day1_input.txt", header = FALSE, na.strings='')
df <- read.csv("day1_input.txt", header = FALSE, fill=TRUE)
con = file("day1_input.txt")
for (i in 1:20) {
line = readLines(con, n = 1)
print(line)
}
close(con)
con = file("day1_input.txt")
While TRUE {
line = readLines(con, n = 1)
print(line)
}
close(con)
my_txt <- readLines("day1_input.txt")
tail(my_txt)
head(my_txt)
my_txt[1]
my_txt[3]
txt <- readLines("day1_input.txt")
length(txt)
elf = list(1,0)
elf[[1]]
elf[[2]]
txt[3] == ''
txt[2] == ''
txt[1]
as.numeric(txt[1])
# find Elf with most calories
max_calories = 0
calories = 0
for (i in 1:length(txt)) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
}
calories = calories + as.numeric(txt[i])
}
print(max_calories)
txt
as.numeric(txt[1]) + as.numeric(txt[2])
max_calories = 0
calories = 0
for (i in 1:10) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
}
calories = calories + as.numeric(txt[i])
print(i)
print(calories)
print(max_calories)
}
max_calories = 0
calories = 0
for (i in 1:10) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
}
print(max_calories)
max_calories = 0
calories = 0
for (i in 1:length(txt)) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
}
print(max_calories)
max_calories = 0
calories = 0
for (i in 1:10) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
print(i)
print(calories)
print(max_calories)
}
max_calories = 0
calories = 0
for (i in 1:20) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
print(i)
print(calories)
print(max_calories)
}
print(max_calories)
txt
txt[3]
as.numeric(txt[3])
max_calories = 0
calories = 0
for (i in 1:1000) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
print(i)
print(calories)
print(max_calories)
}
print(max_calories)
max_calories = 0
calories = 0
for (i in 1:length(txt)) {
if (txt[i] == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(txt[i]) }
print(i)
print(calories)
print(max_calories)
}
print(max_calories)
for (i in txt) { print(i)}
max_calories = 0
calories = 0
for (line in txt) {
if (line == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(line) }
print(i)
print(calories)
print(max_calories)
}
print(max_calories)
max_calories = 0
calories = 0
for (line in txt) {
if (line == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(line) }
print(paste0(line," ",calories," ",max_calories))
}
max_calories = 0
calories = 0
i = 1
for (line in txt) {
if (line == '') {
if ( calories > max_calories ) { max_calories = calories
calories = 0 }
} else { calories = calories + as.numeric(line) }
print(paste0(i," ",line," ",calories," ",max_calories))
i = i + 1
}
max_calories = 0
calories = 0
i = 1
for (line in txt) {
if (line == '') {
if ( calories > max_calories ) { max_calories = calories }
calories = 0
} else { calories = calories + as.numeric(line) }
print(paste0(i," ",line," ",calories," ",max_calories))
i = i + 1
}
max_calories = 0
calories = 0
for (line in txt) {
if (line == '') {
if ( calories > max_calories ) { max_calories = calories }
calories = 0
} else { calories = calories + as.numeric(line) }
}
print(max_calories)
df <- as.data.frame(1,2)
View(df)
df <- as.data.frame(list(elf = 0, cal = 0))
View(df)
df <- rbind(df, list(1,2))
View(df)
df <- as.data.frame(list(elf = 0, cal = 0))
elf = 1
for (line in txt) {
if (line == '') { elf = elf + 1 }
else { df <- rbind(df,list(elf,as.numeric(line))) }
}
View(df)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories) %>% pull(calories)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3) %>% pull(calories)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3) %>% pull(calories) %>% sum(calories)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3) %>% sum(calories)
75501+70096+69997
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3)
a = df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3)
sum(a$calories)
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3) %>% pull(calories) %>% sum()
# packages
library(tidyverse)
# read data
txt <- readLines("day1_input.txt")
# load into dataframe
df <- as.data.frame(list(elf = 0, cal = 0))
elf = 1
for (line in txt) {
if (line == '') { elf = elf + 1 }
else { df <- rbind(df,list(elf,as.numeric(line))) }
}
### Part 1 : Find Elf with most calories
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories) %>% pull(calories)
### Part 2 : Find top 3 Elves with most calories
df %>% group_by(elf) %>% summarise(calories = sum(cal)) %>% slice_max(calories, n=3) %>% pull(calories) %>% sum()
# packages
library(tidyverse)
# read data
txt <- readLines("day2_input.txt")
txt[1]
str_split(txt[1]," ")
df = as.data.frame(str_split(txt[1]," "))
df
mtcars %>%
split(.$cyl)
a = mtcars
a
split(txt," ")
split(txt[1]," ")
str_split(txt[1]," ")
a = str_split(txt[1]," ")
a
class(a)
df <- NULL
for (line in txt) {
if (is.null(df)) { df <- as.data.frame(str_split(line," ")) }
else { df <- rbind(df,str_split(line," ")) }
}
View(df)
df <- as.data.frame(str_split(line," "))
df
df <- as.data.frame(list(str_split(line," ")))
line
str_split_fixed(line," ",2)
str_split_fixed(txt," ",2)
df <- as.data.frame(str_split_fixed(txt," ",2))
View(df)
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2))
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2))
View(df)
names(df)
df %>% mutate(V1 = as.numeric(case_when(V1 == 'X' ~ 1,
V1 == 'Y' ~ 2,
V1 == 'Z' ~ 3,
TRUE ~ 0)))
View(df)
df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)))
df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ V2 + 3,
V2-V1 %in% (1,-2) ~ V2 + 6,
TRUE ~ V2)) %>%
pull(score) %>%
sum()
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0)))
View(a)
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ V2 + 3,
V2-V1 %in% (1,-2) ~ V2 + 6,
TRUE ~ V2))
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 %in% (1,-2) ~ (V2 + 6),
TRUE ~ V2))
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ 3,
V2-V1 %in% (1,-2) ~ 6,
TRUE ~ 0))
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 %in% c(1,-2) ~ (V2 + 6),
TRUE ~ V2))
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 ~ (V2 + 6),
TRUE ~ V2))
a = df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2))
df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2)) %>%
pull(sum(score))
df %>% mutate(V1 = as.numeric(case_when(V1 == 'A' ~ 1,
V1 == 'B' ~ 2,
V1 == 'C' ~ 3,
TRUE ~ 0)),
V2 = as.numeric(case_when(V2 == 'X' ~ 1,
V2 == 'Y' ~ 2,
V2 == 'Z' ~ 3,
TRUE ~ 0))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>%
sum()
letters[1:26]
myLetters <- letters[1:26]
match("a", myLetters)
myLetters <- letters[1:26]
match("A", myLetters)
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2)) %>%
mutate(V1 = as.numeric(match(V1,LETTERS[1:26])))
match("X",LETTERS[24:26])
match("Y",LETTERS[24:26])
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2)) %>%
mutate(V1 = as.numeric(match(V1,LETTERS[1:26])),
V2 = as.numeric(match(V1,LETTERS[24:26])))
df %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2)) %>%
mutate(V1 = as.numeric(match(V1,LETTERS[1:26])),
V2 = as.numeric(match(V2,LETTERS[24:26])))
### Part 1
df %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
df %>%
mutate(V2 = as.numeric(case_when(V2 == '1' ~ case_when(V1 == 1 ~ 3,
V1 == 2 ~ 1,
TRUE ~ 2),
V2 == '2' ~ V1,
TRUE ~ case_when(V1 == 1 ~ 2,
V1 == 2 ~ 3,
TRUE ~ 1)))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
V2-V1 == 1 | V2-V1 == -2~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
(3-1)
(3-1)
(3-1) == 2
(3-1) %in% c(2)
(3-1) %in% c(2,3)
df %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
(V2-V1) %in% c(1,-2) ~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
# packages
library(tidyverse)
# read data
df <- as.data.frame(str_split_fixed(readLines("day2_input.txt")," ",2)) %>%
mutate(V1 = as.numeric(match(V1,LETTERS[1:26])),
V2 = as.numeric(match(V2,LETTERS[24:26])))
### Part 1
df %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
(V2-V1) %in% c(1,-2) ~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
### Part 2
df %>%
mutate(V2 = as.numeric(case_when(V2 == '1' ~ case_when(V1 == 1 ~ 3,
V1 == 2 ~ 1,
TRUE ~ 2),
V2 == '2' ~ V1,
TRUE ~ case_when(V1 == 1 ~ 2,
V1 == 2 ~ 3,
TRUE ~ 1)))) %>%
mutate(score = case_when(V2-V1 == 0 ~ (V2 + 3),
(V2-V1) %in% c(1,-2) ~ (V2 + 6),
TRUE ~ V2)) %>%
pull(score) %>% sum()
match(c("a","b","c"),c("a"))

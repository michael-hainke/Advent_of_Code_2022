pos = match( str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]])
pos
pos = pos[!is.na(pos)]
pos
pos = unique(pos[!is.na(pos)])
pos = match( str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]])
pos = unique(pos[!is.na(pos)])
pos
str_split(txt[[1]][2],"")[[1]]
str_split(txt[[1]][2],"")[[1]][1]
str_split(txt[[1]][2],"")[[1]][pos]
pos2 = match( str_split(txt[[1]][2],"")[[1]][pos],str_split(txt[[1]][3],"")[[1]])
pos2
pos2 = pos2[!is.na(pos2)][1]
pos2
df <- readLines("day3_test_input.txt")
df <- readLines("day3_input_test.txt")
df <- readLines("day3_test_input.txt")
df
df2 <- NULL
for (i in seq(1, length(df), 3)) {
df2 <- c(df2, list(c(df[i],df[i+1],df[i+2])))
}
find_match2 <- function(txt) {
pos = match( str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]])
pos = unique(pos[!is.na(pos)])
pos2 = match( str_split(txt[[1]][2],"")[[1]][pos],str_split(txt[[1]][3],"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
match(str_split(txt[[1]][3],"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
}
sum(sapply(df2, find_match2))
df2
txt <- df2[1]
txt
pos = match( str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]])
pos = unique(pos[!is.na(pos)])
pos
pos2 = match( str_split(txt[[1]][2],"")[[1]][pos],str_split(txt[[1]][3],"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
pos
pos2
match(str_split(txt[[1]][3],"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
txt <- df2[2]
pos = match( str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]])
pos = unique(pos[!is.na(pos)])
pos2 = match( str_split(txt[[1]][2],"")[[1]][pos],str_split(txt[[1]][3],"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
match(str_split(txt[[1]][3],"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
sum(lapply(df2, find_match2))
find_match2(txt)
sapply(df2, find_match2)
lapply(df2, find_match2)
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match(c(df2, list(c(df[i],df[i+1],df[i+2]))))
}
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(c(df2, list(c(df[i],df[i+1],df[i+2]))))
}
total
df[i]
df[i+1]
one = df[i]
two = df[i+1]
pos = match( str_split(one,""),str_split(two,""))
pos
str_split(one,"")
find_match2 <- function(one,two,three) {
pos = match( str_split(one,"")[[1]],str_split(two,"")[[1]])
pos = unique(pos[!is.na(pos)])
pos2 = match( str_split(two,"")[[1]][pos],str_split(three,"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
match(str_split(three,"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
}
find_match2(df[i],df[i+1],df[i+2])
i = 1
find_match2(df[i],df[i+1],df[i+2])
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
# read data
df <- readLines("day3_input.txt")
find_match <- function(txt) {
pos = match( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] )
pos = pos[!is.na(pos)][1]
match(str_sub(str_sub(txt, -(nchar(txt)/2)),pos,pos),c(letters[1:26],LETTERS[1:26]))
}
find_match2 <- function(one,two,three) {
pos = match( str_split(one,"")[[1]],str_split(two,"")[[1]])
pos = unique(pos[!is.na(pos)])
pos2 = match( str_split(two,"")[[1]][pos],str_split(three,"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
match(str_split(three,"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
}
### Part 1
sum(sapply(df, find_match))
### Part 2
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
df <- readLines("day3_input.txt")
intersect(df[1],df[2])
intersect(str_split(df[1],""),str_split(df[2],""))
df[1]
df[2]
intersect(c("a","b","c"),c("b"))
intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] )
txt = df[1]
intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] )
find_matchv2 <- function(txt) {
pos = intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] )
match(pos,c(letters[1:26],LETTERS[1:26]))
}
sum(sapply(df, find_matchv2))
intersect(c("a","b","c"),c("b"),c("b"))
find_match2v2 <- function(one,two,three) {
pos = intersect(intersect(one,two),three)
match(pos,c(letters[1:26],LETTERS[1:26]))
}
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
# find match between 3 elves
find_match2 <- function(one,two,three) {
pos = match( str_split(one,"")[[1]],str_split(two,"")[[1]])
pos = unique(pos[!is.na(pos)])
pos2 = match( str_split(two,"")[[1]][pos],str_split(three,"")[[1]])
pos2 = pos2[!is.na(pos2)][1]
match(str_split(three,"")[[1]][pos2],c(letters[1:26],LETTERS[1:26]))
}
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2v2(df[i],df[i+1],df[i+2])
}
total
one = c("a","b","c")
two = c("b","d")
three = c("b")
intersect(intersect(one,two),three)
pos = intersect(intersect(one,two),three)
match(pos,c(letters[1:26],LETTERS[1:26]))
find_match2v2 <- function(one,two,three) {
pos = intersect(intersect(str_split(one,"")[[1]],str_split(two,"")[[1]]),str_split(three,"")[[1]])
match(pos,c(letters[1:26],LETTERS[1:26]))
}
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2v2(df[i],df[i+1],df[i+2])
}
total
a = list(c(df[1],df[2],df[3]))
a
length(a)
length(a[1])
a[1]
a[[1]]
length(a[[1]])
txt = a
txt[[1]]
txt[[1]][1]
txt[[1]][2]
intersect(intersect(str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]]),str_split(txt[[1]][3],"")[[1]])
find_match2v2 <- function(txt) {
pos = intersect(intersect(str_split(txt[[1]][1],"")[[1]],str_split(txt[[1]][2],"")[[1]]),str_split(txt[[1]][3],"")[[1]])
match(pos,c(letters[1:26],LETTERS[1:26]))
}
sum(sapply(txt, find_match2v2))
txt
class(txt)
sum(lapply(txt, find_match2v2))
unlist(txt)
sum(sapply(unlist(txt), find_match2v2))
sum(lapply(unlist(txt), find_match2v2))
txt
test <- function(txt) {
print("hello")
}
sapply(txt, test)
txt
sapply(unlist(txt), test)
lapply(unlist(txt), test)
sapply(unlist(txt), test)
apply(txt, 1, test)
df <- readLines("day3_input.txt")
df <- as.data.frame(readLines("day3_input.txt"))
View(df)
View(df)
View(df)
df <- as.data.frame(list(v1 =readLines("day3_input.txt")))
df <- as.data.frame(list(v1 =readLines("day3_input.txt"))) %>%
mutate(a = find_match(v1))
df <- as.data.frame(list(v1 =readLines("day3_input.txt"))) %>%
mutate(a = find_matchv2(v1))
df <- as.data.frame(list(v1 =readLines("day3_input.txt")))
df$a = find_matchv2(df$v1))
df <- as.data.frame(list(v1 =readLines("day3_input.txt")))
df$a = find_matchv2(df$v1)
# find match between 2 compartments
find_match <- function(txt) {
match(intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] ),
c(letters[1:26],LETTERS[1:26]))
}
# find match between 3 elves
find_match2 <- function(one,two,three) {
match(intersect(intersect(str_split(one,"")[[1]],str_split(two,"")[[1]]),str_split(three,"")[[1]]),
c(letters[1:26],LETTERS[1:26]))
}
# read data
df <- readLines("day3_input.txt")
### Part 1
sum(sapply(df, find_match))
### Part 2
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2v2(df[i],df[i+1],df[i+2])
}
total
# find match between 2 compartments
find_match <- function(txt) {
match(intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] ),
c(letters[1:26],LETTERS[1:26]))
}
# find match between 3 elves
find_match2 <- function(one,two,three) {
match(intersect(intersect(str_split(one,"")[[1]],str_split(two,"")[[1]]),str_split(three,"")[[1]]),
c(letters[1:26],LETTERS[1:26]))
}
# read data
df <- readLines("day3_input.txt")
### Part 1
sum(sapply(df, find_match))
### Part 2
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
df <- readLines("day3_input.txt")
df
nchar(df[1])
df[1]
txt <- readLines("day3_input.txt")
df <- data.frame(elf,compartment,letter)
df <- data.frame(elf = character(),
compartment = integer(),
letter = character())
View(df)
length(txt)
ceiling(0.5)
ceiling(0.25)
txt = txt[1]
length(txt)
df <- data.frame(elf = character(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, elf, ceiling(letter/nchar(txt[elf])*2))
}
}
View(df)
df <- data.frame(elf = character(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, c(elf, ceiling(letter/nchar(txt[elf])*2)))
}
}
View(df)
df <- data.frame(elf = integer(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, c(elf, ceiling(letter/nchar(txt[elf])*2), str_sub(txt[elf],letter,letter)))
}
}
View(df)
df <- data.frame(elf = integer(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, list(elf, ceiling(letter/nchar(txt[elf])*2), str_sub(txt[elf],letter,letter)))
}
}
View(df)
df <- data.frame(elf = integer(),
compartment = integer(),
letter = character())
df <- rbind(df, list(1,1,"h"))
View(df)
df <- data.frame(elf = integer(),
compartment = integer(),
letter = character())
class(df)
class(df$elf)
df
df <- rbind(df, list(elf=0,compartment=1,letter="j"))
df
df <- data.frame(elf = integer(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, list(elf=elf, compartment=ceiling(letter/nchar(txt[elf])*2), letter=str_sub(txt[elf],letter,letter)))
}
}
df <- data.frame(group = integer(),
elf = integer(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, list(group=ceiling(elf/3), elf=elf, compartment=ceiling(letter/nchar(txt[elf])*2), letter=str_sub(txt[elf],letter,letter)))
}
}
txt <- readLines("day3_input.txt")
# put into a tall dataframe
df <- data.frame(group = integer(),
elf = integer(),
compartment = integer(),
letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, list(group=ceiling(elf/3), elf=elf, compartment=ceiling(letter/nchar(txt[elf])*2), letter=str_sub(txt[elf],letter,letter)))
}
}
df1 <- df %>% distinct()
View(df1)
df <- df %>% distinct()
a <- df %>% group_by(elf,compartment) %>% tally()
View(a)
a <- df %>% group_by(elf,letter) %>% tally()
View(a)
a <- df %>% group_by(elf,letter) %>% tally() %>% filter(n=2)
a <- df %>% group_by(elf,letter) %>% tally() %>% filter(n==2)
View(a)
a <- df %>% group_by(elf,letter) %>% tally() %>% filter(n==2) %>% pull(letter)
sum(match(a,c(letters[1:26],LETTERS[1:26])))
sum(match(df %>% group_by(elf,letter) %>% tally() %>% filter(n==2) %>% pull(letter) , c(letters[1:26],LETTERS[1:26])))
sum(match(df %>% group_by(group,letter) %>% tally() %>% filter(n==2) %>% pull(letter) , c(letters[1:26],LETTERS[1:26])))
sum(match(df %>% group_by(group,letter) %>% tally() %>% filter(n==3) %>% pull(letter) , c(letters[1:26],LETTERS[1:26])))
library(tidyverse)
# read data
txt <- readLines("day3_input.txt")
# convert to dataframe with one letter per row
df <- data.frame(group = integer(), elf = integer(), compartment = integer(), letter = character())
for (elf in 1:length(txt)) {
for (letter in 1:nchar(txt[elf])) {
df <- rbind(df, list(group=ceiling(elf/3), elf=elf, compartment=ceiling(letter/nchar(txt[elf])*2), letter=str_sub(txt[elf],letter,letter)))
}
}
### Part 1
sum(match(df %>% distinct() %>% group_by(elf,letter) %>% tally() %>% filter(n==2) %>% pull(letter) , c(letters[1:26],LETTERS[1:26])))
### Part 2
sum(match(df %>% distinct() %>% group_by(group,letter) %>% tally() %>% filter(n==3) %>% pull(letter) , c(letters[1:26],LETTERS[1:26])))
txt <- readLines("day4_input.txt")
txt[1]
for (line in text) { print line}
for (line in text) { print(line)}
for (line in txt) { print(line)}
txt[1]
str_split(txt[1],",")
str_split(str_split(txt[1],","),"-")
str_split_fixed(str_split(txt[1],","),"-",2)
txt[1]
str_split(txt[1],",|-")
unlist(str_split(txt[1],",|-"))
unlist(str_split(txt[1],",|-"))[1]
str_split(txt[1],",|-")[1]
rbind(sapply(txt, str_split(",|-")))
unlist(str_split(txt[1],",|-"))
class(unlist(str_split(txt[1],",|-")))
df <- data.frame(start_a = integer(), end_a = integer(), start_b = integer(), end_b = integer())
a = rbind(df,unlist(str_split(txt[1],",|-")))
a
df <- data.frame(list(0,0,0,0))
View(df)
a = rbind(df,unlist(str_split(txt[1],",|-")))
unlist(str_split(txt,",|-"))
str_split(txt,",|-")
as.data.frame(str_split(txt,",|-"))
b = as.data.frame(str_split(txt,",|-"))
View(b)
b = as.data.frame(str_split(txt,",|-")[1])
b = as.data.frame(str_split(txt,",|-")[[1]])
b = as.data.frame(str_split(txt,",|-"), col.names=c("a","b","c","d"))
View(b)
b = data.frame(str_split(txt,",|-"))
b = data.frame(unlist(str_split(txt,",|-")))
b = data.frame(str_split(txt,",|-"))
c = t(b)
View(c)
df <- data.frame(matrix(unlist(str_split(txt,",|-")), nrow=length(str_split(txt,",|-")), byrow=TRUE))
View(df)
txt[1]
txt <- unlist(str_split(readLines("day4_input.txt"),",|-"))
txt
txt <- str_split(readLines("day4_input.txt"),",|-")
txt
length(txt)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=TRUE))
df <- as.data.frame(matrix(unlist(txt), nrow=length(txt), byrow=TRUE))
df <- as.data.frame(matrix(unlist(txt), nrow=length(txt), byrow=TRUE), col.names=c("a","b","c","d"))
df <- as.data.frame(matrix(unlist(txt), nrow=length(txt), byrow=TRUE), colnames=c("a","b","c","d"))
df <- data.frame(matrix(unlist(txt), nrow=length(txt)))
# find match between 2 compartments
find_match <- function(txt) {
match(intersect( str_split ( str_sub(txt, 1, (nchar(txt)/2)), "")[[1]] , str_split ( str_sub(txt, -(nchar(txt)/2)), "")[[1]] ),
c(letters[1:26],LETTERS[1:26]))
}
# find match between 3 elves
find_match2 <- function(one,two,three) {
match(intersect(intersect(str_split(one,"")[[1]],str_split(two,"")[[1]]),str_split(three,"")[[1]]),
c(letters[1:26],LETTERS[1:26]))
}
# read data
df <- readLines("day3_input.txt")
### Part 1
sum(sapply(df, find_match))
### Part 2
total <- 0
for (i in seq(1, length(df), 3)) {
total <- total + find_match2(df[i],df[i+1],df[i+2])
}
total
df <- data.frame(matrix(unlist(txt), nrow=length(txt)))
colnames(df) <- c("a-start","a-end","b-start","b-end")
View(df)
df <- data.frame(matrix(unlist(txt), nrow=length(txt)))
colnames(df) <- c("S1","E1","S2","E2")
df[1]
df[1,]
S1=17
E1=10
S2=34
E2=24
txt[1]
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
colnames(df) <- c("S1","E1","S2","E2")
df[1,]
S1=17
E1=99
S1=18
E2=24
abs(S1-S2)
S2=18
abs(S1-S2)
S1
S1=17
E1=99
S2=18
E2=24
abs(S1-S2)
min(E1-S1,E2-S2)
max(S1,E1,S2,E2)
df1 <- df %>% mutate(contained = (abs(S1-S2)+min(E1-S1,E2-S2)) <= (pmax(S1,E1,S2,E2)-pmin(S1,E1,S2,E2)))
class(df$S1)
class(df$E1)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T), stringsAsFactors = F)
colnames(df) <- c("S1","E1","S2","E2")
class(df$E1)
df <- as.integer(df)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
df <- lapply(df,as.numeric)
colnames(df) <- c("S1","E1","S2","E2")
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
df <- lapply(df,as.numeric)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
df <- sapply(df,as.numeric)
colnames(df) <- c("S1","E1","S2","E2")
class(df$E1)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
sapply(df,as.numeric)
colnames(df) <- c("S1","E1","S2","E2")
class(df$E1)
df <- data.frame(matrix(unlist(txt), nrow=length(txt), byrow=T))
colnames(df) <- c("S1","E1","S2","E2")
df <- df %>% mutate(S1 = as.integer(S1), E1 = as.integer(E1), S2 = as.integer(S2), E2 = as.integer(E2))
View(df)
class(df$S1)
df1 <- df %>% mutate(contained = (abs(S1-S2)+min(E1-S1,E2-S2)) <= (pmax(S1,E1,S2,E2)-pmin(S1,E1,S2,E2)))
View(df1)
df[5,]
S1 = 77
E1 = 88
S2 = 14
E2 = 78
abs(S1-S2)+min(E1-S1,E2-S2)
pmax(S1,E1,S2,E2)-pmin(S1,E1,S2,E2)
table(df1$contained)
df1 <- df %>% mutate(contained = (S1>=S2 & E1<=E2) | (S2>=S1 & E2<=S2))
View(df1)
df1 <- df %>% mutate(contained = (S1>=S2 & E1<=E2) | (S2>=S1 & E2<=E1))
count(df1$contained)
sum(df1$contained)
df %>% mutate(contained = (S1>=S2 & E1<=E2) | (S2>=S1 & E2<=E1)) %>% pull(contained) %>% sum()
df %>% mutate(overlap = (S1<=S2 & E1>=S2) | (S2<=S1 & E2>=S1)) %>% pull(overlap) %>% sum()
